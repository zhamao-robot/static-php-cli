name: CI on arm linux

on:
  workflow_dispatch:
    inputs:
      operating-system:
        required: true
        description: Compile target arch (Linux only)
        type: choice
        options:
          - aarch64
      version:
        required: true
        description: php version to compile
        default: '8.2'
        type: choice
        options:
          - '8.2'
          - '8.1'
          - '8.0'
          - '7.4'
      build-cli:
        description: build cli binary
        default: true
        type: boolean
      build-micro:
        description: build phpmicro binary
        type: boolean
      build-fpm:
        description: build fpm binary
        type: boolean
      extensions:
        description: extensions to compile (comma separated)
        required: true
        type: string
      debug:
        type: boolean

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  build:
    name: build ${{ inputs.version }} on ${{ inputs.operating-system }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      # Cache downloaded source
      - id: cache-download
        uses: actions/cache@v3
        with:
          path: downloads
          key: php-${{ inputs.version }}-dependencies

      # With or without debug
      - if: inputs.debug == true
        run: echo "SPC_BUILD_DEBUG=--debug" >> $GITHUB_ENV

      # With target select: cli, micro or both
      - if: ${{ inputs.build-cli == true }}
        run: echo "SPC_BUILD_CLI=--build-cli" >> $GITHUB_ENV
      - if: ${{ inputs.build-micro == true }}
        run: echo "SPC_BUILD_MICRO=--build-micro" >> $GITHUB_ENV
      - if: ${{ inputs.build-fpm == true }}
        run: echo "SPC_BUILD_FPM=--build-fpm" >> $GITHUB_ENV

      # If there's no dependencies cache, fetch sources, with or without debug
      - run: SPC_USE_ARCH=${{ inputs.operating-system }} ./bin/spc-alpine-docker download --with-php=${{ inputs.version }} --all ${{ env.SPC_BUILD_DEBUG }}

      # Run build command
      - run: SPC_USE_ARCH=${{ inputs.operating-system }} ./bin/spc-alpine-docker build ${{ inputs.extensions }} ${{ env.SPC_BUILD_DEBUG }} ${{ env.SPC_BUILD_CLI }} ${{ env.SPC_BUILD_MICRO }} ${{ env.SPC_BUILD_FPM }}
      
      - name: Pack PHP ${{ inputs.version }} to archive
        run: |
          PHPVER=$(cat source/php-src/main/php_version.h | grep "PHP_VERSION " | awk -F\" '{print $2}')
          cd buildroot/bin
          mkdir dist/
          tar -zcvf "dist/php-$PHPVER-cli-linux-${{ inputs.operating-system }}.tar.gz" ./php
          if [ -f "./micro.sfx" ]; then
            tar -zcvf "dist/php-$PHPVER-micro-linux-${{ inputs.operating-system }}.tar.gz" ./micro.sfx
          fi
          if [ -f "./php-fpm" ]; then
            tar -zcvf "dist/php-$PHPVER-fpm-linux-${{ inputs.operating-system }}.tar.gz" ./php-fpm
          fi
      - name: Deploy to Zhamao Server
        uses: easingthemes/ssh-deploy@main
        env:
          SSH_PRIVATE_KEY: ${{ secrets.DEPLOY_SERVER_SECRET_KEY }}
          ARGS: "-rltgoDzvO"
          SOURCE: "buildroot/bin/dist/"
          REMOTE_HOST: ${{ secrets.DEPLOY_SERVER_HOST }}
          REMOTE_PORT: ${{ secrets.DEPLOY_SERVER_PORT }}
          REMOTE_USER: ${{ secrets.DEPLOY_SERVER_USER }}
          TARGET: ${{ secrets.DEPLOY_SERVER_TARGET }}
